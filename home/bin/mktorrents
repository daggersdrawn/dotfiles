#!/bin/bash
#
# pbrisbin 2011
#
###

errorout() { echo "$*" >&2; exit 1; }

message() {
  cat << EOF
  usage: mktorrents [ -d <dir> ] [ -t <dir> ] [ -a <url> ] [ -p <port> ] <file> ...

    options:
        -d,--data       set destination for linked content files
        -t,--torrent    set destination for created torrent files
        -a,--anounce    set announce url passed to \`createtorrent'
        -p,--port       set port passed to \`createtorrent'
        -h,--help       display this message

EOF
  exit 1
}

parse_options() {
  # set my personal defaults
  outdata="$HOME/.gbs-content"
  outdir="$HOME/.gbs-torrents"
  announce='http://tracker.publicbt.com'
  port=80

  # parse commandline options
  while [[ -n "$1" ]]; do
    case "$1" in
      -d|--data)     shift; outdata="$(readlink -f "$1")" ;;
      -t|--torrents) shift; outdir="$(readlink -f "$1")"  ;;
      -a|--announce) shift; announce="$1"                 ;;
      -p|--port)     shift; port=$1                       ;;
      -h|--help)     message                              ;;
      *)             files+=( "$(readlink -f "$1")" )     ;;
    esac
    shift
  done

  # validate arguments
  [[ ! -d "$outdata"      ]] && errorout "$outdata: not a directory."
  [[ ! -d "$outdir"       ]] && errorout "$outdir: not a directory."
  [[ -z "$announce"       ]] && errorout 'empty announce url.'
  [[ -n "${port//[0-9]/}" ]] && errorout "$port: invalid port."
}

process_file() {
  local file="$1"

  [[ ! -f "$file" ]] && return 1

  local data_file="${file##*/}" # basename
  local torr_file="$outdir/${data_file%.*}.torrent"

  if [[ ! -e "$data_file" ]]; then
    if ! ln -s "$file" .; then
       echo "$file -> $data_file: failed to link." >&2
       return 1
     fi
  fi

  if [[ ! -e "$torr_file" ]]; then
    if ! createtorrent --announce "$announce" --port $port "./$data_file" "$torr_file"; then
      echo "./$data_file -> $torr_file: failed to create." >&2
      return 1
    fi
  fi
}

main() {
  pushd "$outdata" &>/dev/null || exit 1

  for file in "${files[@]}"; do
    process_file "$file"
  done

  popd &>/dev/null
}

parse_options "$@"; main
